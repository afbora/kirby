os: linux
dist: bionic

language: php
php:
  - 7.3
  - 7.4
  - 8.0
services:
  - memcached
before_install:
  # set up PHP config
  - phpenv config-rm xdebug.ini || true # code coverage is generated with PCOV
  - phpenv config-add tests/php.ini
install:
  # ensure that the Composer config is valid
  - composer validate

  # install Composer packages, will also trigger dump-autoload
  - composer require -n --ignore-platform-reqs "phwoolcon/ci-pecl-cacher" "phpunit/phpunit:^9" "php-coveralls/php-coveralls"
  - composer install -n --ignore-platform-reqs --no-suggest

  # install and cache PHP extensions
  - ./vendor/bin/ci-pecl-install memcached
  - ./vendor/bin/ci-pecl-install pcov
  - if [[ ${TRAVIS_PHP_VERSION:0:3} == "8.0" ]]; then ./vendor/bin/ci-pecl-install apcu-5.1.19; fi
before_script:
  - if [[ ${TRAVIS_PHP_VERSION:0:3} == "8.0" ]]; then echo "extension = apcu.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini; fi
  - mkdir -p build/logs
  - ls -al
script:
  - ./vendor/bin/phpunit --coverage-clover build/logs/clover.xml
after_success:
  - travis_retry ./vendor/bin/php-coveralls -v
cache:
  directories:
    - vendor
    - ~/.composer/cache
    - ~/pecl_cache

jobs:
  fast_finish: true
  allow_failures:
    - php: 8.0
  include:
  - name: Backend Coding Standards
    language: php
    php: 7.4
    services: [] # none, override the PHP config above
    install:
      - composer require -n --ignore-platform-reqs "friendsofphp/php-cs-fixer"
    script:
      - PHP_CS_FIXER_IGNORE_ENV=1 ./vendor/bin/php-cs-fixer fix --config .php_cs --verbose --diff --dry-run
    after_success: skip # do nothing, override the PHP config above
    cache:
      directories:
        - ~/.composer/cache
        - ~/.php-cs-fixer
  - name: Frontend E2E
    language: node_js
    node_js: node
    services: [] # none, override the PHP config above
    before_install:
      - SANDBOX_DIR="$(dirname $TRAVIS_BUILD_DIR)/sandbox"
      - cd $TRAVIS_BUILD_DIR/panel
    install:
      # install the Sandbox
      - git clone --depth 1 --recursive https://github.com/getkirby/sandbox.git $SANDBOX_DIR

      # use the currently tested `kirby` dir inside the Sandbox
      - rm -rf $SANDBOX_DIR/kirby
      - ln -s $TRAVIS_BUILD_DIR $SANDBOX_DIR/kirby

      # install npm dependencies
      - npm ci
      - npm install -g wait-on
    before_script:
      - LOG_DIR="$(dirname $TRAVIS_BUILD_DIR)/_logs"
      - mkdir -p $LOG_DIR

      # start the built-in PHP server
      - phpenv global 7.4
      - php -S localhost:8000 -t $SANDBOX_DIR/public $SANDBOX_DIR/router.php &> $LOG_DIR/php.log &

      # start the Vue CLI server
      - VUE_APP_DEV_SERVER=http://localhost:8000 npm run dev -- --skip-plugins @vue/cli-plugin-eslint &> $LOG_DIR/vue-cli.log &
      - wait-on http://localhost:8080/
    script:
      - cypress_host=http://localhost:8000 npm run test
    after_success: skip # do nothing, override the PHP config above
    before_cache:
      - killall php
      - killall node
    after_script:
      - |
        for log in $LOG_DIR/*; do
          echo -e "\033[1m$(basename $log)\033[0m"
          cat $log
          echo
        done
    cache:
      npm: false
      directories:
        - ~/.cache
        - ~/.npm
  - name: Frontend ESLint
    language: node_js
    node_js: node
    services: [] # none, override the PHP config above
    before_install:
      - cd $TRAVIS_BUILD_DIR/panel
    install:
      # install npm dependencies
      - npm ci
    before_script: skip # do nothing, override the PHP config above
    script:
      - npm run lint -- --no-fix
    after_success: skip # do nothing, override the PHP config above
    cache:
      npm: false
      directories:
        - ~/.cache
        - ~/.npm
